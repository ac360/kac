{
  "name": "zxcvbn",
  "version": "1.0.0",
  "description": "realistic password strength estimation",
  "main": "index.js",
  "scripts": {
    "test": "xdg-open zxcvbn/test/index.html"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/lowe/zxcvbn.git"
  },
  "keywords": [
    "realistic",
    "password",
    "strength",
    "estimation",
    "estimate",
    "meter",
    "validate",
    "validation"
  ],
  "author": {
    "name": "Dan Wheeler"
  },
  "license": "MIT",
  "readme": "```\n_________________________________________________/\\/\\___________________\n_/\\/\\/\\/\\/\\__/\\/\\__/\\/\\____/\\/\\/\\/\\__/\\/\\__/\\/\\__/\\/\\________/\\/\\/\\/\\___\n_____/\\/\\______/\\/\\/\\____/\\/\\________/\\/\\__/\\/\\__/\\/\\/\\/\\____/\\/\\__/\\/\\_\n___/\\/\\________/\\/\\/\\____/\\/\\__________/\\/\\/\\____/\\/\\__/\\/\\__/\\/\\__/\\/\\_\n_/\\/\\/\\/\\/\\__/\\/\\__/\\/\\____/\\/\\/\\/\\______/\\______/\\/\\/\\/\\____/\\/\\__/\\/\\_\n________________________________________________________________________\n```\n\n`zxcvbn`, named after a crappy password, is a JavaScript password strength\nestimation library. Use it to implement a custom strength bar on a\nsignup form near you!\n\n`zxcvbn` attempts to give sound password advice through pattern matching\nand conservative entropy calculations. It finds 10k common passwords,\ncommon American names and surnames, common English words, and common\npatterns like dates, repeats (aaa), sequences (abcd), and QWERTY\npatterns.\n\nFor full motivation, see:\n\nhttp://tech.dropbox.com/?p=165\n\n# Installation\n\n``` html\n<script type=\"text/javascript\" src=\"zxcvbn-async.js\">\n</script>\n```\n\nis the best way to add `zxcvbn` to your site. Host `zxcvbn.js` and\n`zxcvbn-async.js` somewhere on your web server, and make the hardcoded\npath inside `zxcvbn-async.js` point to `zxcvbn.js`. A relative path works\nwell.\n\n`zxcvbn-async.js` is a tiny 350 bytes. On `window.load`, after your page\nloads and renders, it'll fetch `zxcvbn.js`, which is more like 700k (330k\ngzipped), most of which is a series of dictionaries.\n\nI haven't found 700k to be too large -- especially because a password\nisn't the first thing a user typically enters on a registration form.\n\n`zxcvbn.js` can also be included directly:\n\n``` html\n<script type=\"text/javascript\" src=\"zxcvbn.js\">\n</script>\n```\n\nBut this isn't recommended, as the 700k download will block your\ninitial page load.\n\n`zxcvbn` adds a single function to the global namespace:\n\n``` javascript\nzxcvbn(password, user_inputs)\n```\n\nIt takes one required argument, a password, and returns a result object.\nThe result includes a few properties:\n\n``` coffeescript\nresult.entropy            # bits\n\nresult.crack_time         # estimation of actual crack time, in seconds.\n\nresult.crack_time_display # same crack time, as a friendlier string:\n                          # \"instant\", \"6 minutes\", \"centuries\", etc.\n\nresult.score              # [0,1,2,3,4] if crack time is less than\n                          # [10**2, 10**4, 10**6, 10**8, Infinity].\n                          # (useful for implementing a strength bar.)\n\nresult.match_sequence     # the list of patterns that zxcvbn based the\n                          # entropy calculation on.\n\nresult.calculation_time   # how long it took to calculate an answer,\n                          # in milliseconds. usually only a few ms.\n````\n\nThe optional `user_inputs` argument is an array of strings that `zxcvbn`\nwill add to its internal dictionary. This can be whatever list of\nstrings you like, but is meant for user inputs from other fields of the\nform, like name and email. That way a password that includes the user's\npersonal info can be heavily penalized. This list is also good for\nsite-specific vocabulary.\n\nWhen `zxcvbn` loads (after the async script fetch is complete), it'll\ncheck if a function named `zxcvbn_load_hook` is defined, and run it with\nno arguments if so. Most sites shouldn't need this.\n\n# Development\n\nBug reports and pull requests welcome!\n\n`zxcvbn` is written in CoffeeScript and Python. `zxcvbn.js` is built with\n`compile_and_minify.sh`, which compiles CoffeeScript into JavaScript,\nthen JavaScript into efficient, minified JavaScript.\n\nFor development, include these scripts instead of `zxcvbn.js`:\n\n``` html\n<script type=\"text/javascript\" src=\"adjacency_graphs.js\">\n</script>\n<script type=\"text/javascript\" src=\"frequency_lists.js\">\n</script>\n<script type=\"text/javascript\" src=\"matching.js\">\n</script>\n<script type=\"text/javascript\" src=\"scoring.js\">\n</script>\n<script type=\"text/javascript\" src=\"init.js\">\n</script>\n```\n\nData lives in the first two scripts. These get produced by:\n\n```\nscripts/build_keyboard_adjacency_graph.py\nscripts/build_frequency_lists.py\n```\n\n`matching.coffee`, `scoring.coffee`, and `init.coffee` make up the rest of the\nlibrary.\n\n`init.js` needs to come last, otherwise script order doesn't matter.\n\nI recommend setting up coffee-mode in emacs, or whatever equivalent, so\nthat CoffeeScript compiles to js on save. Otherwise you'll need to\nrepetitively run `compile_and_minify.js`\n\n\n# Acknowledgments\n\nDropbox, thank you in so many ways, but in particular, for supporting\nindependent projects both inside and outside of hackweek.\n\nMany thanks to Mark Burnett for releasing his 10k top passwords list:\n\nhttp://xato.net/passwords/more-top-worst-passwords\n\nand for his 2006 book,\n\"Perfect Passwords: Selection, Protection, Authentication\"\n\nHuge thanks to Wiktionary contributors for building a frequency list\nof English as used in television and movies:\nhttp://en.wiktionary.org/wiki/Wiktionary:Frequency_lists\n\nLast but not least, big thanks to xkcd :)\nhttps://xkcd.com/936/\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/lowe/zxcvbn/issues"
  },
  "_id": "zxcvbn@1.0.0",
  "dist": {
    "shasum": "0118447da5ca64f18c6668f0136441b8490c9d02"
  },
  "_resolved": "git://github.com/studds/zxcvbn.git#7e4d04f79659b2848f5787c893fad71b195a1bd2",
  "_from": "zxcvbn@git://github.com/studds/zxcvbn.git"
}
